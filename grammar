program ::= {statement}
statement ::= "print" (expression | string) sc
    | "if" comparison openCurly {statement} closeCurly
    | "while" comparison openCurly {statement} closeCurly
    | "let" ident "=" expression sc
    | "input" ident sc
    | ident "=" expression sc
comparison ::= expression (("==" | "!=" | ">" | ">=" | "<" | "<=") expression)+
expression ::= term {( "-" | "+" ) term}
term ::= unary {( "/" | "*" ) unary}
unary ::= ["+" | "-"] primary
primary ::= number | ident
sc ::= ';'+
openCurly ::= '{'
closeCurly ::= '}'